// <auto-generated />
using System;
using CharityPlatform.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CharityPlatform.DAL.Migrations
{
    [DbContext(typeof(CharityPlatformContext))]
    [Migration("20210520212003_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CharityOrganizationEntityUser", b =>
                {
                    b.Property<Guid>("CharityOrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MastersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CharityOrganizationId", "MastersId");

                    b.HasIndex("MastersId");

                    b.ToTable("CharityOrganizationEntityUser");
                });

            modelBuilder.Entity("CharityPlatform.DAL.Models.CharityOrganizationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CharityOrganizations");
                });

            modelBuilder.Entity("CharityPlatform.DAL.Models.CharityProjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AlreadyDonated")
                        .HasColumnType("int");

                    b.Property<Guid>("CharityOrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DonationGoal")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharityOrganizationId");

                    b.ToTable("CharityProjects");
                });

            modelBuilder.Entity("CharityPlatform.DAL.Models.DonationRecordEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharityProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DonationAmount")
                        .HasColumnType("int");

                    b.Property<Guid>("DonorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CharityProjectId");

                    b.HasIndex("DonorId");

                    b.ToTable("DonationRecords");
                });

            modelBuilder.Entity("CharityPlatform.DAL.Models.DonorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DonorLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Donors");
                });

            modelBuilder.Entity("CharityPlatform.DAL.Models.StoredEvent", b =>
                {
                    b.Property<string>("EventStreamId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EventPosition")
                        .HasColumnType("int");

                    b.Property<string>("EventJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventStreamId", "EventPosition");

                    b.ToTable("StoredEvents");
                });

            modelBuilder.Entity("CharityPlatform.DAL.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CharityOrganizationEntityUser", b =>
                {
                    b.HasOne("CharityPlatform.DAL.Models.CharityOrganizationEntity", null)
                        .WithMany()
                        .HasForeignKey("CharityOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CharityPlatform.DAL.Models.User", null)
                        .WithMany()
                        .HasForeignKey("MastersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CharityPlatform.DAL.Models.CharityProjectEntity", b =>
                {
                    b.HasOne("CharityPlatform.DAL.Models.CharityOrganizationEntity", "CharityOrganization")
                        .WithMany()
                        .HasForeignKey("CharityOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CharityOrganization");
                });

            modelBuilder.Entity("CharityPlatform.DAL.Models.DonationRecordEntity", b =>
                {
                    b.HasOne("CharityPlatform.DAL.Models.CharityProjectEntity", "CharityProject")
                        .WithMany()
                        .HasForeignKey("CharityProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CharityPlatform.DAL.Models.DonorEntity", "Donor")
                        .WithMany("DonationHistory")
                        .HasForeignKey("DonorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CharityProject");

                    b.Navigation("Donor");
                });

            modelBuilder.Entity("CharityPlatform.DAL.Models.DonorEntity", b =>
                {
                    b.HasOne("CharityPlatform.DAL.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CharityPlatform.DAL.Models.DonorEntity", b =>
                {
                    b.Navigation("DonationHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
